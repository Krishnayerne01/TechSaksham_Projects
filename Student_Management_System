import tkinter as tk
from tkinter import messagebox

# Initialize data structures
students = {}  # Dictionary to store student records
student_ids = []  # List to keep track of student IDs

def add_student():
    student_id = entry_student_id.get().strip()
    name = entry_name.get().strip()
    age = entry_age.get().strip()
    grade = entry_grade.get().strip()
    
    if student_id and name and age and grade:
        if student_id in students:
            messagebox.showerror("❌ Error", "Student ID already exists!")
        else:
            students[student_id] = {'name': name, 'age': age, 'grade': grade}
            student_ids.append(student_id)
            messagebox.showinfo("✅ Success", "Student added successfully!")
            clear_entries()
    else:
        messagebox.showerror("⚠️ Error", "Please fill in all fields.")

def view_all_students():
    if not students:
        messagebox.showinfo("ℹ️ No Students", "No students found.")
    else:
        result = "\n".join([f"🆔 ID: {id}, 👤 Name: {students[id]['name']}, 🎂 Age: {students[id]['age']}, 🎓 Grade: {students[id]['grade']}" for id in student_ids])
        messagebox.showinfo("📋 All Students", result)

def search_student():
    student_id = entry_student_id.get().strip()
    if student_id in students:
        student = students[student_id]
        messagebox.showinfo("🔍 Student Found", f"🆔 ID: {student_id}, 👤 Name: {student['name']}, 🎂 Age: {student['age']}, 🎓 Grade: {student['grade']}")
    else:
        messagebox.showerror("❌ Error", "Student not found.")

def update_student():
    student_id = entry_student_id.get().strip()
    if student_id in students:
        name = entry_name.get().strip()
        age = entry_age.get().strip()
        grade = entry_grade.get().strip()
        
        if name and age and grade:
            students[student_id] = {'name': name, 'age': age, 'grade': grade}
            messagebox.showinfo("✅ Success", "Student information updated successfully!")
            clear_entries()
        else:
            messagebox.showerror("⚠️ Error", "Please fill in all fields.")
    else:
        messagebox.showerror("❌ Error", "Student not found.")

def delete_student():
    student_id = entry_student_id.get().strip()
    if student_id in students:
        del students[student_id]
        student_ids.remove(student_id)
        messagebox.showinfo("✅ Success", "Student record deleted successfully!")
        clear_entries()
    else:
        messagebox.showerror("❌ Error", "Student not found.")

def clear_entries():
    entry_student_id.delete(0, tk.END)
    entry_name.delete(0, tk.END)
    entry_age.delete(0, tk.END)
    entry_grade.delete(0, tk.END)

# Create the main window
root = tk.Tk()
root.title("🎓 Student Management System")
root.geometry("500x600")
root.config(bg="#ffefd5")  # Light peach background

# Top Heading
heading_label = tk.Label(root, text="🎓 Student Management System", font=("Helvetica", 20, "bold"), fg="white", bg="#673ab7", pady=10)
heading_label.pack(fill="both")

# Form to Add/Update/Search/Delete Student
frame = tk.Frame(root, bg="#ffefd5")
frame.pack(pady=20)

# Labels and Entries
label_student_id = tk.Label(frame, text="🆔 Student ID:", font=("Helvetica", 12), bg="#ffefd5")
label_student_id.grid(row=0, column=0, padx=10, pady=10)
entry_student_id = tk.Entry(frame, font=("Helvetica", 12))
entry_student_id.grid(row=0, column=1, padx=10, pady=10)

label_name = tk.Label(frame, text="👤 Name:", font=("Helvetica", 12), bg="#ffefd5")
label_name.grid(row=1, column=0, padx=10, pady=10)
entry_name = tk.Entry(frame, font=("Helvetica", 12))
entry_name.grid(row=1, column=1, padx=10, pady=10)

label_age = tk.Label(frame, text="🎂 Age:", font=("Helvetica", 12), bg="#ffefd5")
label_age.grid(row=2, column=0, padx=10, pady=10)
entry_age = tk.Entry(frame, font=("Helvetica", 12))
entry_age.grid(row=2, column=1, padx=10, pady=10)

label_grade = tk.Label(frame, text="🎓 Grade:", font=("Helvetica", 12), bg="#ffefd5")
label_grade.grid(row=3, column=0, padx=10, pady=10)
entry_grade = tk.Entry(frame, font=("Helvetica", 12))
entry_grade.grid(row=3, column=1, padx=10, pady=10)

# Buttons
button_add = tk.Button(root, text="➕ Add Student", font=("Helvetica", 12), bg="#4caf50", fg="white", command=add_student)
button_add.pack(fill="x", padx=50, pady=5)

button_view_all = tk.Button(root, text="📋 View All Students", font=("Helvetica", 12), bg="#2196f3", fg="white", command=view_all_students)
button_view_all.pack(fill="x", padx=50, pady=5)

button_search = tk.Button(root, text="🔍 Search Student", font=("Helvetica", 12), bg="#ff9800", fg="white", command=search_student)
button_search.pack(fill="x", padx=50, pady=5)

button_update = tk.Button(root, text="✏️ Update Student", font=("Helvetica", 12), bg="#ff5722", fg="white", command=update_student)
button_update.pack(fill="x", padx=50, pady=5)

button_delete = tk.Button(root, text="🗑️ Delete Student", font=("Helvetica", 12), bg="#f44336", fg="white", command=delete_student)
button_delete.pack(fill="x", padx=50, pady=5)

# Start the main loop
root.mainloop()
